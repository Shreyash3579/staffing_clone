import { CaseRoll } from './caseRoll.interface';
import { ResourceOrCasePlanningViewNote } from './resource-or-case-planning-view-note.interface';

export interface ProjectDetails {
  oldCaseCode?: string;
  caseCode?: string;
  caseName?: string;
  caseTypeCode?: string;
  caseType?: string;
  pipelineId?: string;
  opportunityName?: string;
  opportunityStatus?: string;
  clientCode: string;
  clientName: string;
  coordinatingPartnerCode: string;
  billingPartnerCode: string;
  otherPartnersCodes: string;
  caseBillingPartnerCode: string;
  caseBillingPartnerFullName: string;
  caseBillingPartnerOfficeAbbreviation: string;
  caseManagerCode: string;
  caseManagerFullName: string;
  caseManagerOfficeAbbreviation: string;
  caseRoll: CaseRoll;
  primaryIndustry: string;
  industryPracticeArea: string;
  primaryCapability: string;
  capabilityPracticeArea: string;
  coordinatingPartnerName: string;
  managingOfficeCode: number;
  managingOfficeAbbreviation: string;
  managingOfficeName: string;
  billingPartnerName: string;
  billingOfficeCode: number;
  billingOfficeAbbreviation: string;
  billingOfficeName: string;
  pegIndustryTerm: string;
  otherPartnersNamesWithOfficeAbbreviations: string;
  startDate: string;
  originalStartDate: string;
  overrideStartDate: string;
  endDate: string;
  originalEndDate: string;
  overrideEndDate: string;
  probabilityPercent?: number;
  originalProbabilityPercent?: number;
  overrideProbabilityPercent?: number;
  type: string;
  notes?: string;
  casePlanningViewNotes?: ResourceOrCasePlanningViewNote[];
  caseServedByRingfence?: boolean;
  estimatedTeamSize?: string;
  cortexOpportunityId?:string;
  caseAttributes?: string;
  pegOpportunityId: string;
  combinedSkuTerm: string;
  includeInDemand: boolean;
  isFlagged: boolean;
}
