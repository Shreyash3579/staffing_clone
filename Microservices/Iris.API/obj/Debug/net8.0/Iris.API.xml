<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Iris.API</name>
    </assembly>
    <members>
        <member name="M:Iris.API.Controllers.EmployeeWorkAndSchoolHistoryController.GetWorkAndShoolHistoryByEmployeeCode(System.String)">
            <summary>
            Get employee's work and school history
            </summary>
            <param name="employeeCode"></param>
        </member>
        <member name="M:Iris.API.Controllers.EmployeeWorkAndSchoolHistoryController.GetWorkSchoolHistoryForAll(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Get work and school history for all employees paginated
            </summary>
            <param name="pageNumber"></param>
            <param name="pageCount"></param>
            <param name="includeAlumni"></param>
        </member>
        <member name="M:Iris.API.Controllers.EmployeeWorkAndSchoolHistoryController.GetWorkSchoolHistoryByModifiedDate(System.DateTime,System.Boolean)">
            <summary>
            Get work and school history for employees after last modifed date
            </summary>
            <param name="lastModifiedAfter"></param>
            <param name="includeAlumni"></param>
        </member>
        <member name="M:Iris.API.Controllers.PracticeAreaController.GetAllIndustryPracticeArea">
            <summary>
            Get lookup data for industry practice area
            </summary>
            <returns></returns>
        </member>
        <member name="M:Iris.API.Controllers.PracticeAreaController.GetAllCapabilityPracticeArea">
            <summary>
            Get lookup data for capability practice area
            </summary>
            <returns></returns>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(`0,System.String)">
            <summary>
                Generic insert
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(`0,System.String,System.Object)">
            <summary>
                Generic insert with dynamic parameters
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(System.Object,System.String)">
            <summary>
                Generic insert with dynamic parameters
            </summary>
            <returns>A list of the inserted objects</returns>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(System.String,System.Object)">
            <summary>
                Generic insert with dynamic parameters which does not return data
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.InsertAsync(System.String,System.Object)">
            <summary>
                Async insert with dynamic parameters which does not return data
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.InsertAsync(System.Object,System.String)">
            <summary>
                Async insert with dynamic parameters which return inserted object
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(System.Data.IDbConnection,`0,System.String,System.Data.IDbTransaction)">
            <summary>
                Generic insert in a scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Insert(System.Data.IDbConnection,`0,System.String,System.Object,System.Data.IDbTransaction)">
            <summary>
                Generic insert with dynamic parameters in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(`0,System.String)">
            <summary>
                Generic update
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(System.Data.IDbConnection,`0,System.String,System.Data.IDbTransaction)">
            <summary>
                Generic update in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(`0,System.String,System.Object)">
            <summary>
                Generic update with dynamic parameters
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(System.Object,System.String)">
            <summary>
                Generic update with dynamic parameters
            </summary>
            <returns>A list of the updated objects</returns>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(System.Data.IDbConnection,`0,System.String,System.Object,System.Data.IDbTransaction)">
            <summary>
                Generic update with dynamic parameters in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Update(System.String,System.Object)">
            <summary>
                Generic Update with dynamic parameters which does not return data
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.UpdateAsync(System.String,System.Object)">
            <summary>
                Async Update with dynamic parameters which does not return data
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.UpdateAsync(System.Object,System.String)">
            <summary>
                Async update with dynamic parameters which return updated object
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(`0,System.String)">
            <summary>
                Generic delete
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.Data.IDbConnection,`0,System.String,System.Data.IDbTransaction)">
            <summary>
                Generic delete in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.Guid,System.String)">
            <summary>
                Generic delete with uniqueidentifier as the id
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.String,System.Object)">
            <summary>
                Generic delete with dynamic parameters
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.DeleteAsync(System.String,System.Object)">
            <summary>
                Async Delete with dynamic parameters which does not return data
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.Object,System.String)">
            <summary>
                Generic delete with dynamic parameters
            </summary>
            <returns>A list of the deleted objects</returns>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.Data.IDbConnection,System.Guid,System.String,System.Data.IDbTransaction)">
            <summary>
                Generic delete with uniqueidentifier as the id, in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.Delete(System.Data.IDbConnection,System.Object,System.String,System.Data.IDbTransaction)">
            <summary>
                Generic delete with dynamic parameters in the scope of a transaction
            </summary>
        </member>
        <member name="M:Iris.API.Core.Repository.BaseRepository`1.DeleteAsync(System.Object,System.String)">
            <summary>
                Async Delete with dynamic parameters which return deleted object
            </summary>
        </member>
    </members>
</doc>
